// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

<<<<<<< HEAD
enum UserRole {
  ADMIN
  USER
  PREMIUM_USER
}

=======
>>>>>>> e2ec2f644d538822c65cf5d61c11ea2cb26cb473
model User {
  id    String @id @default(cuid()) @map("_id")
  email String @unique
  name  String?
  age   Int
<<<<<<< HEAD
  image String?
  accounts Account[]
  role UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?    @map("expires_at")
  token_type        String? @map("token_type")
  scope             String?
  id_token          String? @map("id_token")
  session_state     String? @map("session_state")
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@index([userId])
=======
>>>>>>> e2ec2f644d538822c65cf5d61c11ea2cb26cb473
}
